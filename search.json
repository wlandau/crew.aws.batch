[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement .landau@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Development community effort, welcome participation.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note crew.aws.batch project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/CONTRIBUTING.html","id":"discussions","dir":"","previous_headings":"","what":"Discussions","title":"Contributing","text":"https://github.com/wlandau/crew.aws.batch/discussions, can post general questions, brainstorm ideas, ask help.","code":""},{"path":"/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"https://github.com/wlandau/crew.aws.batch/issues bug reports, performance issues, maintenance tasks, feature requests. post, please abide following guidelines. posting new issue discussion topic, please take moment search existing similar threads order avoid duplication. bug reports: can, please install latest GitHub version crew.aws.batch (.e. remotes::install_github(\"wlandau/crew.aws.batch\")) verify issue still persists. Describe issue prose clearly concisely possible. Runnable: post enough R code data onlooker can create error computer. Minimal: reduce runtime wherever possible remove complicated details irrelevant issue hand. Readable: format code according tidyverse style guide.","code":""},{"path":"/CONTRIBUTING.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Contributing","text":"External code contributions extremely helpful right circumstances. recommended steps. Prior contribution, please propose idea discussion topic issue thread maintainer can define intent scope work. Fork repository. Follow GitHub flow create new branch, add commits, open pull request. Discuss code maintainer pull request thread. everything looks good, maintainer merge code project. Please also follow additional guidelines. Respect architecture reasoning package. Depending scope work, may want read design documents (package vignettes). possible, keep contributions small enough easily review manually. okay split work multiple pull requests. Format code according tidyverse style guide check formatting lint_package() function lintr package. new features functionality, add tests tests. Tests can automated go tests/testthat/. Tests automated go tests/interactive/. features affecting performance, good practice add profiling studies tests/performance/. Check code coverage covr::package_coverage(). Automated tests cover new changed functionality pull request. Run overall package checks devtools::check() goodpractice::gp() Describe contribution project’s NEWS.md file. sure mention relevent GitHub issue numbers GitHub name done existing news entries. feel contribution substantial enough official author contributor status, please add Authors@R field DESCRIPTION file.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Eli Lilly Company Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":null,"dir":"","previous_headings":"","what":"Prework","title":"Prework","text":"understand agree Contributor Code Conduct. already submitted discussion topic issue discuss idea maintainer.","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"related-github-issues-and-pull-requests","dir":"","previous_headings":"","what":"Related GitHub issues and pull requests","title":"Prework","text":"Ref: #","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Prework","text":"Please explain purpose scope contribution.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"William Michael Landau. Author, maintainer. Eli Lilly Company. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Landau WM (2024). crew.aws.batch: Crew Launcher Plugin AWS Batch. R package version 0.0.6.9002, https://github.com/wlandau/crew.aws.batch, https://wlandau.github.io/crew.aws.batch/.","code":"@Manual{,   title = {crew.aws.batch: A Crew Launcher Plugin for AWS Batch},   author = {William Michael Landau},   year = {2024},   note = {R package version 0.0.6.9002,   https://github.com/wlandau/crew.aws.batch},   url = {https://wlandau.github.io/crew.aws.batch/}, }"},{"path":"/index.html","id":"crewawsbatch-a-crew-launcher-plugin-for-aws-batch-","dir":"","previous_headings":"","what":"A Crew Launcher Plugin for AWS Batch","title":"A Crew Launcher Plugin for AWS Batch","text":"computationally demanding analysis projects, statisticians data scientists asynchronously deploy long-running tasks distributed systems, ranging traditional clusters cloud services. crew.aws.batch package extends mirai-powered ‘crew’ package worker launcher plugin AWS Batch. Inspiration also comes packages mirai, future, rrq, clustermq, batchtools.","code":""},{"path":[]},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"A Crew Launcher Plugin for AWS Batch","text":"Please see https://wlandau.github.io/crew.aws.batch/ documentation, including full function reference usage tutorial.","code":""},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"A Crew Launcher Plugin for AWS Batch","text":"crew.aws.batch launches AWS Batch jobs run crew workers. comes set special requirements: Understand AWS Batch official documentation. job definitions must Docker-compatible container image R crew.aws.batch installed. may wish inherit existing rocker image. minimum, launcher plugin work, IAM policies need permission submit terminate jobs. appropriately monitor jobs, policies also need permission list describe jobs. addition, managing job definitions described requires permission register, deregister, describe job definitions. view CloudWatch logs, need permission get log events. compute environment, security group must permit inbound outbound TCP traffic within .1 controller workers must run security group can communicate within firewalled local network.2 security group ID sg-00000 belongs VPC vpc-00000, inbound outbound rules may look something like :","code":"client <- paws.compute::ec2() groups <- client$describe_security_groups(GroupIds = \"sg-00000\") str(groups$SecurityGroups[[1L]]) #> List of 8 #>  $ Description        : chr \"Allow TCP traffic on ephemeral ports\" #>  $ GroupName          : chr \"self-pointing-group\" #>  $ IpPermissions      :List of 1 #>   ..$ :List of 7 #>   .. ..$ FromPort        : num 1024 #>   .. ..$ IpProtocol      : chr \"tcp\" #>   .. ..$ IpRanges        : list() #>   .. ..$ Ipv6Ranges      : list() #>   .. ..$ PrefixListIds   : list() #>   .. ..$ ToPort          : num 65535 #>   .. ..$ UserIdGroupPairs:List of 1 #>   .. .. ..$ :List of 7 #>   .. .. .. ..$ Description           : chr \"Accept traffic from other jobs in group.\" #>   .. .. .. ..$ GroupId               : chr \"sg-00000\" #>   .. .. .. ..$ GroupName             : chr(0) #>   .. .. .. ..$ PeeringStatus         : chr(0) #>   .. .. .. ..$ UserId                : chr \"CENSORED\" #>   .. .. .. ..$ VpcId                 : chr(0) #>   .. .. .. ..$ VpcPeeringConnectionId: chr(0) #>  $ OwnerId            : chr \"CENSORED\" #>  $ GroupId            : chr \"sg-00000\" #>  $ IpPermissionsEgress:List of 1 #>   ..$ :List of 7 #>   .. ..$ FromPort        : num 1024 #>   .. ..$ IpProtocol      : chr \"tcp\" #>   .. ..$ IpRanges        : list() #>   .. ..$ Ipv6Ranges      : list() #>   .. ..$ PrefixListIds   : list() #>   .. ..$ ToPort          : num 65535 #>   .. ..$ UserIdGroupPairs:List of 1 #>   .. .. ..$ :List of 7 #>   .. .. .. ..$ Description           : chr \"Allow traffic to other jobs in group.\" #>   .. .. .. ..$ GroupId               : chr \"sg-00000\" #>   .. .. .. ..$ GroupName             : chr(0) #>   .. .. .. ..$ PeeringStatus         : chr(0) #>   .. .. .. ..$ UserId                : chr \"CENSORED\" #>   .. .. .. ..$ VpcId                 : chr(0) #>   .. .. .. ..$ VpcPeeringConnectionId: chr(0) #>  $ Tags               : list() #>  $ VpcId              : chr \"vpc-00000\""},{"path":"/index.html","id":"managing-job-definitions","dir":"","previous_headings":"","what":"Managing job definitions","title":"A Crew Launcher Plugin for AWS Batch","text":"submitting jobs, AWS Batch requires job definition describe container image resource requirements. can AWS web console, AWS command line interface (CLI), software development kit (SDK) like paws R package, job definition class crew.aws.batch. crew.aws.batch, first create job definition object. job definition may may exist point. exist, can register register(), oversimplified limited-scope method creates container-based job definitions \"awslogs\" log driver (CloudWatch).3 , container image can simple Docker Hub identifier (like \"alpine:latest:) full URI ECR image.4 describe() method shows information current past revisions job definition. Set active TRUE see just active revisions. Use deregister() deregister revision job definition. revision number supplied, defaults greatest active revision number.","code":"definition <- crew_definition_aws_batch(   job_definition = \"YOUR_JOB_DEFINITION_NAME\",   job_queue = \"YOUR_JOB_QUEUE_NAME\" ) definition$register(   image = \"AWS_ACCOUNT_ID.dkr.ecr.AWS_REGION.amazonaws.com/ECR_REPOSITORY_NAME:IMAGE_TAG\",   platform_capabilities = \"EC2\",   memory_units = \"gigabytes\",   memory = 8,   cpus = 2 ) #> # A tibble: 1 × 3 #>   name                     revision arn                                      #>   <chr>                       <int> <chr>                                    #> 1 YOUR_JOB_DEFINITION_NAME       81 arn:aws:batch:us-east-1:CENSORED:jo… definition$describe(active = TRUE) #> # A tibble: 2 × 16 #>   name            arn   revision status type  scheduling_priority parameters #>   <chr>           <chr>    <int> <chr>  <chr>               <dbl> <list>     #> 1 YOUR_JOB_DEFIN… arn:…       82 active cont…                   3 <list [0]> #> 2 YOUR_JOB_DEFIN… arn:…       81 active cont…                   3 <list [0]> #> # ℹ 9 more variables: retry_strategy <list>, container_properties <list>, #> #   timeout <list>, node_properties <list>, tags <list>, #> #   propagate_tags <lgl>, platform_capabilities <chr>, #> #   eks_properties <list>, container_orchestration_type <chr> definition$deregister() #> # A tibble: 1 × 16 #>   name            arn   revision status type  scheduling_priority parameters #>   <chr>           <chr>    <int> <chr>  <chr>               <dbl> <list>     #> 1 YOUR_JOB_DEFIN… arn:…       81 active cont…                   3 <list [0]> #> # ℹ 9 more variables: retry_strategy <list>, container_properties <list>, #> #   timeout <list>, node_properties <list>, tags <list>, #> #   propagate_tags <lgl>, platform_capabilities <chr>, #> #   eks_properties <list>, container_orchestration_type <chr>"},{"path":"/index.html","id":"monitoring-and-terminating-jobs","dir":"","previous_headings":"","what":"Monitoring and terminating jobs","title":"A Crew Launcher Plugin for AWS Batch","text":"crew.aws.batch, crew controller automatically submits jobs AWS Batch. jobs may fail linger number reasons, impede work increase costs. use crew_controller_aws_batch(), please learn monitor terminate AWS Batch jobs manually. crew_monitor_aws_batch() defines “monitor” help manually list, inspect, terminate jobs. need supply job definition name job queue name. can submit individual AWS Batch jobs test computing environment. Method status() checks status individual job. jobs() method gets status jobs within job queue job definition originally supplied crew_monitor_aws_batch(). may include many jobs ones submitted life cycle current monitor object. job state can \"submitted\", \"pending\", \"runnable\", \"starting\", \"running\", \"succeeded\", \"failed\". monitor method job state get jobs state. addition, active() method just states \"submitted\", \"pending\", \"runnable\", \"starting\", \"running\", inactive() method just \"succeeded\" \"failed\" states. terminate job, use terminate() method. effect canceling terminating job, although may see change right away job currently \"runnable\". Manually terminated jobs listed failed. get CloudWatch logs job, use log() method. method returns tibble log messages numeric timestamps. log messages long conveniently view tibble, can print screen cat() writeLines().","code":"monitor <- crew_monitor_aws_batch(   job_definition = \"YOUR_JOB_DEFINITION_NAME\",   job_queue = \"YOUR_JOB_QUEUE_NAME\" ) job1 <- monitor$submit(name = \"job1\", command = c(\"echo\", \"hello\\nworld\")) job2 <- monitor$submit(name = \"job2\", command = c(\"echo\", \"job\\nsubmitted\")) job2 #> # A tibble: 1 × 3 #>   name  id                                   arn                        #>   <chr> <chr>                                <chr>                      #> 1 job2  c38d55ad-4a86-4371-9994-6ea8882f5726 arn:aws:batch:us-east-2:0… monitor$status(id = job2$id) #> # A tibble: 1 × 8 #>   name  id                arn   status   reason created started stopped #>   <chr> <chr>             <chr> <chr>    <chr>    <dbl>   <dbl>   <dbl> #> 1 job2  c38d55ad-4a86-43… arn:… runnable NA     1.70e12      NA      NA monitor$jobs() #> # A tibble: 2 × 8 #>   name  id                arn   status    reason created started stopped #>   <chr> <chr>             <chr> <chr>     <chr>    <dbl>   <dbl>   <dbl> #> 1 job1  653df636-ac74-43… arn:… succeeded Essen… 1.70e12 1.70e12 1.70e12 #> 2 job2  c38d55ad-4a86-43… arn:… runnable  NA     1.70e12      NA      NA monitor$succeeded() #> # A tibble: 1 × 8 #>   name  id                arn   status    reason created started stopped #>   <chr> <chr>             <chr> <chr>     <chr>    <dbl>   <dbl>   <dbl> #> 1 job1  653df636-ac74-43… arn:… succeeded NA     1.70e12 1.70e12 1.70e12 monitor$inactive() #> # A tibble: 1 × 8 #>   name  id                arn   status    reason created started stopped #>   <chr> <chr>             <chr> <chr>     <chr>    <dbl>   <dbl>   <dbl> #> 1 job1  653df636-ac74-43… arn:… succeeded NA     1.70e12 1.70e12 1.70e12 monitor$terminate(id = job2$id) log <- monitor$log(id = job1$id) log #> # A tibble: 2 × 3 #>   message     timestamp ingestion_time #>   <chr>           <dbl>          <dbl> #> 1 hello   1702068378163  1702068378245 #> 2 world   1702068378163  1702068378245 writeLines(log$message) #> hello #> world"},{"path":"/index.html","id":"using-crew-with-aws-batch-workers","dir":"","previous_headings":"","what":"Using crew with AWS Batch workers","title":"A Crew Launcher Plugin for AWS Batch","text":"start using crew.aws.batch earnest, first create controller object. Also supply names job queue job definition, well optional flags settings may need. already job definition, “monitor” object can help create one (see ). point, usage exactly basic crew. push() method submits tasks auto-scales AWS Batch workers meet demand. pop() method retrieves available tasks. Remember terminate controller done.","code":"library(crew.aws.batch) controller <- crew_controller_aws_batch(   name = \"my_workflow\", # for informative job names   workers = 16,   tasks_max = 2, # to avoid reaching wall time limits   seconds_launch = 600, # to allow a 10-minute startup window   seconds_idle = 60, # to release resources when they are not needed   processes = NULL, # See the \"Asynchronous worker management\" section below.   aws_batch_job_definition = \"YOUR_JOB_DEFINITION_NAME\",   aws_batch_job_queue = \"YOUR_JOB_QUEUE_NAME\" ) controller$start() controller$push(name = \"do work\", command = do_work()) controller$pop() #> # A tibble: 1 × 11 #>   name         command result seconds   seed error trace warni…¹ launc…² worker insta…³ #>   <chr>        <chr>   <list>   <dbl>  <int> <chr> <chr> <chr>   <chr>    <int> <chr>   #> 1 do work   … do_work… <int>        0 1.56e8 NA    NA    NA      79e71c…      1 7686b2… #> # … with abbreviated variable names ¹​warnings, ²​launcher, ³​instance controller$terminate()"},{"path":"/index.html","id":"asynchronous-worker-management","dir":"","previous_headings":"","what":"Asynchronous worker management","title":"A Crew Launcher Plugin for AWS Batch","text":"HTTP requests submit terminate jobs may take 1 2 seconds, overhead may burdensome many workers. run requests asynchronously, set processes argument crew_controller_aws_batch() number local mirai daemons want process requests. processes start controller$start() end controller$terminate() local R session ends. controller$launcher$async$errors() shows recent error messages generated launch termination workers.","code":""},{"path":"/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"A Crew Launcher Plugin for AWS Batch","text":"processes = NULL disables async makes launch/termination errors immediate easier see. may also wish set options(paws.log_level = 3L) increase verbosity paws messages.","code":""},{"path":"/index.html","id":"thanks","dir":"","previous_headings":"","what":"Thanks","title":"A Crew Launcher Plugin for AWS Batch","text":"Charlie Gao created mirai nanonext graciously accommodated complicated demanding feature requests made crew ecosystem possible. Thanks Henrik Bengtsson, David Kretch, Adam Banker, Michael Schubert edifying conversations cloud computing R.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Crew Launcher Plugin for AWS Batch","text":"Please note crew project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"A Crew Launcher Plugin for AWS Batch","text":"","code":"citation(\"crew.aws.batch\") To cite package 'crew.aws.batch' in publications use:    Landau WM (????). _crew.aws.batch: A Crew Launcher Plugin for AWS   Batch_. R package version 0.0.6,   https://github.com/wlandau/crew.aws.batch,   <https://wlandau.github.io/crew.aws.batch/>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {crew.aws.batch: A Crew Launcher Plugin for AWS Batch},     author = {William Michael Landau},     note = {R package version 0.0.6,  https://github.com/wlandau/crew.aws.batch},     url = {https://wlandau.github.io/crew.aws.batch/},   }"},{"path":"/reference/crew.aws.batch-package.html","id":null,"dir":"Reference","previous_headings":"","what":"crew.aws.batch: a crew launcher plugin for AWS Batch — crew.aws.batch-package","title":"crew.aws.batch: a crew launcher plugin for AWS Batch — crew.aws.batch-package","text":"computationally demanding analysis projects, statisticians data scientists asynchronously deploy long-running tasks distributed systems, ranging traditional clusters cloud services. crew.aws.batch package extends mirai-powered crew package worker launcher plugins AWS Batch. Inspiration also comes packages mirai, future, rrq, clustermq, batchtools.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"AWS Batch definition class — crew_class_definition_aws_batch","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"AWS Batch definition R6 class","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"See crew_definition_aws_batch().","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"order AWS Batch crew job definition class function properly, IAM policy needs permission perform RegisterJobDefinition, DeregisterJobDefinition, DescribeJobDefinitions AWS Batch API calls. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":[]},{"path":"/reference/crew_class_definition_aws_batch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"job_queue See crew_definition_aws_batch(). job_definition See crew_definition_aws_batch(). log_group See crew_definition_aws_batch(). config See crew_definition_aws_batch(). credentials See crew_definition_aws_batch(). endpoint See crew_definition_aws_batch(). region See crew_definition_aws_batch().","code":""},{"path":[]},{"path":"/reference/crew_class_definition_aws_batch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"crew_class_definition_aws_batch$new() crew_class_definition_aws_batch$validate() crew_class_definition_aws_batch$register() crew_class_definition_aws_batch$deregister() crew_class_definition_aws_batch$describe() crew_class_definition_aws_batch$submit()","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"AWS Batch job definition constructor.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"","code":"crew_class_definition_aws_batch$new(   job_queue = NULL,   job_definition = NULL,   log_group = NULL,   config = NULL,   credentials = NULL,   endpoint = NULL,   region = NULL )"},{"path":"/reference/crew_class_definition_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"job_queue See crew_definition_aws_batch(). job_definition See crew_definition_aws_batch(). log_group See crew_definition_aws_batch(). config See crew_definition_aws_batch(). credentials See crew_definition_aws_batch(). endpoint See crew_definition_aws_batch(). region See crew_definition_aws_batch().","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"AWS Batch job definition object.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"method-validate-","dir":"Reference","previous_headings":"","what":"Method validate()","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"Validate object.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"","code":"crew_class_definition_aws_batch$validate()"},{"path":"/reference/crew_class_definition_aws_batch.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"NULL (invisibly). Throws error field invalid.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"method-register-","dir":"Reference","previous_headings":"","what":"Method register()","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"Register job definition.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"","code":"crew_class_definition_aws_batch$register(   image,   platform_capabilities = \"EC2\",   memory_units = \"gigabytes\",   memory = NULL,   cpus = NULL,   gpus = NULL,   seconds_timeout = NULL,   scheduling_priority = NULL,   tags = NULL,   propagate_tags = NULL,   parameters = NULL,   job_role_arn = NULL,   execution_role_arn = NULL )"},{"path":"/reference/crew_class_definition_aws_batch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"image Character length 1, Docker image used job. can supply path image Docker Hub full URI image Amazon ECR repository. platform_capabilities Optional character length 1, either \"EC2\" run EC2 \"FARGATE\" run Fargate. memory_units Character length 1, either \"gigabytes\" \"mebibytes\" set units memory argument. \"gigabytes\" simpler EC2 jobs, Fargate strict requirements specifying exact amounts mebibytes (MiB). details, read https://docs.aws.amazon.com/cli/latest/reference/batch/register-job-definition.html # nolint memory Positive numeric length 1, amount memory request job. cpus Positive numeric length 1, number virtual CPUs request job. gpus Positive numeric length 1, number GPUs request job. seconds_timeout Optional positive numeric length 1, number seconds job times . scheduling_priority Optional nonnegative integer length 1 0 9999, priority jobs. Jobs higher-valued priorities scheduled first. priority applies job queue fair share policy. Set NULL omit. tags Optional character vector tags. propagate_tags Optional logical length 1, whether propagate tags job definition ECS task. parameters Optional character vector key-value pairs designating parameters job submission. job_role_arn Character length 1, Amazon resource name (ARN) job role. execution_role_arn Character length 1, Amazon resource name (ARN) execution role.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"register() method registers simple job definition using job definition name log group originally supplied crew_definition_aws_batch(). Job definitions created $register() container-based use AWS log driver. complicated kinds jobs, recommend skipping register(): first call https://www.paws-r-sdk.com/docs/batch_register_job_definition/ register job definition, supply job definition name job_definition argument crew_definition_aws_batch().","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"one-row tibble job definition name, ARN, revision number registered job definition.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"method-deregister-","dir":"Reference","previous_headings":"","what":"Method deregister()","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"Attempt deregister revision job definition.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"","code":"crew_class_definition_aws_batch$deregister(revision = NULL)"},{"path":"/reference/crew_class_definition_aws_batch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"revision Finite positive integer length 1, optional revision number deregister. NULL, highest revision number job definition deregistered, exists.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"Attempt deregister job definition whose name originally supplied job_definition argument crew_definition_aws_batch().","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"NULL (invisibly).","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"method-describe-","dir":"Reference","previous_headings":"","what":"Method describe()","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"Describe revisions job definition.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"","code":"crew_class_definition_aws_batch$describe(revision = NULL, active = FALSE)"},{"path":"/reference/crew_class_definition_aws_batch.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"revision Positive integer length 1, optional revision number describe. active Logical length 1, whether filter just active job definition.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"tibble job definition information. one row per revision. fields may nested lists.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"method-submit-","dir":"Reference","previous_headings":"","what":"Method submit()","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"Submit AWS Batch job given job definition.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"","code":"crew_class_definition_aws_batch$submit(   command = c(\"sleep\", \"300\"),   name = paste0(\"crew-aws-batch-job-\", crew::crew_random_name()),   memory_units = \"gigabytes\",   memory = NULL,   cpus = NULL,   gpus = NULL,   seconds_timeout = NULL,   share_identifier = NULL,   scheduling_priority_override = NULL,   tags = NULL,   propagate_tags = NULL,   parameters = NULL )"},{"path":"/reference/crew_class_definition_aws_batch.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"command Character vector command submit job. Usually Linux shell command term character string. name Character length 1 job name. memory_units Character length 1, either \"gigabytes\" \"mebibytes\" set units memory argument. \"gigabytes\" simpler EC2 jobs, Fargate strict requirements specifying exact amounts mebibytes (MiB). details, read https://docs.aws.amazon.com/cli/latest/reference/batch/register-job-definition.html # nolint memory Positive numeric length 1, amount memory request job. cpus Positive numeric length 1, number virtual CPUs request job. gpus Positive numeric length 1, number GPUs request job. seconds_timeout Optional positive numeric length 1, number seconds job times . share_identifier Character length 1 share identifier job. applies job queue scheduling policy. Read official AWS Batch documentation details. scheduling_priority_override Optional nonnegative integer length 0 9999, priority job. value overrides priority job definition. Jobs higher-valued priorities scheduled first. priority applies job queue fair share policy. Set NULL omit. tags Optional character vector tags. propagate_tags Optional logical length 1, whether propagate tags job definition ECS task. parameters Optional character vector key-value pairs designating parameters job submission.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"method uses job queue job definition supplied crew_definition_aws_batch(). jobs submitted way different crew workers crew controller starts automatically using AWS Batch launcher plugin. may use submit() method definition different purposes testing.","code":""},{"path":"/reference/crew_class_definition_aws_batch.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch definition class — crew_class_definition_aws_batch","text":"one-row tibble name, ID, Amazon resource name (ARN) job.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"AWS Batch launcher class — crew_class_launcher_aws_batch","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"AWS Batch launcher R6 class","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"See crew_launcher_aws_batch().","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"order AWS Batch crew plugin function properly, IAM policy needs permission perform SubmitJob TerminateJob AWS Batch API calls. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"aws-arguments","dir":"Reference","previous_headings":"","what":"AWS arguments","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"AWS Batch controller launcher accept many arguments start \"aws_batch_\". arguments AWS-Batch-specific parameters forwarded directly submit_job() method Batch client paws.compute R package full description argument, including meaning format, please visit https://www.paws-r-sdk.com/docs/batch_submit_job/. upstream API documentation https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html analogous CLI documentation https://docs.aws.amazon.com/cli/latest/reference/batch/submit-job.html. actual argument names may vary slightly, depending : example, aws_batch_job_definition argument crew AWS Batch launcher/controller corresponds jobDefinition argument web API paws.compute::batch()$submit_job(), correspond --job-definition argument CLI.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"verbosity","dir":"Reference","previous_headings":"","what":"Verbosity","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"Control verbosity paws.log_level global option R. Set 0 minimum verbosity 3 maximum verbosity.","code":""},{"path":[]},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"crew::crew_class_launcher -> crew_class_launcher_aws_batch","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"aws_batch_config See crew_launcher_aws_batch(). aws_batch_credentials See crew_launcher_aws_batch(). aws_batch_endpoint See crew_launcher_aws_batch(). aws_batch_region See crew_launcher_aws_batch(). aws_batch_job_definition See crew_launcher_aws_batch(). aws_batch_job_queue See crew_launcher_aws_batch(). aws_batch_share_identifier See crew_launcher_aws_batch(). aws_batch_scheduling_priority_override See crew_launcher_aws_batch(). aws_batch_parameters See crew_launcher_aws_batch(). aws_batch_container_overrides See crew_launcher_aws_batch(). aws_batch_node_overrides See crew_launcher_aws_batch(). aws_batch_retry_strategy See crew_launcher_aws_batch(). aws_batch_propagate_tags See crew_launcher_aws_batch(). aws_batch_timeout See crew_launcher_aws_batch(). aws_batch_tags See crew_launcher_aws_batch(). aws_batch_eks_properties_override See crew_launcher_aws_batch().","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"crew::crew_class_launcher$active() crew::crew_class_launcher$booting() crew::crew_class_launcher$call() crew::crew_class_launcher$done() crew::crew_class_launcher$errors() crew::crew_class_launcher$forward() crew::crew_class_launcher$launch() crew::crew_class_launcher$rotate() crew::crew_class_launcher$scale() crew::crew_class_launcher$set_name() crew::crew_class_launcher$settings() crew::crew_class_launcher$start() crew::crew_class_launcher$summary() crew::crew_class_launcher$tally() crew::crew_class_launcher$terminate() crew::crew_class_launcher$terminate_workers() crew::crew_class_launcher$unlaunched() crew::crew_class_launcher$wait()","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"crew_class_launcher_aws_batch$new() crew_class_launcher_aws_batch$validate() crew_class_launcher_aws_batch$launch_worker() crew_class_launcher_aws_batch$terminate_worker()","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"Abstract launcher constructor.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"","code":"crew_class_launcher_aws_batch$new(   name = NULL,   seconds_interval = NULL,   seconds_timeout = NULL,   seconds_launch = NULL,   seconds_idle = NULL,   seconds_wall = NULL,   tasks_max = NULL,   tasks_timers = NULL,   reset_globals = NULL,   reset_packages = NULL,   reset_options = NULL,   garbage_collection = NULL,   launch_max = NULL,   tls = NULL,   processes = NULL,   aws_batch_config = NULL,   aws_batch_credentials = NULL,   aws_batch_endpoint = NULL,   aws_batch_region = NULL,   aws_batch_job_definition = NULL,   aws_batch_job_queue = NULL,   aws_batch_share_identifier = NULL,   aws_batch_scheduling_priority_override = NULL,   aws_batch_parameters = NULL,   aws_batch_container_overrides = NULL,   aws_batch_node_overrides = NULL,   aws_batch_retry_strategy = NULL,   aws_batch_propagate_tags = NULL,   aws_batch_timeout = NULL,   aws_batch_tags = NULL,   aws_batch_eks_properties_override = NULL )"},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"name See crew_launcher_aws_batch(). seconds_interval See crew_launcher_aws_batch(). seconds_timeout See crew_launcher_aws_batch(). seconds_launch See crew_launcher_aws_batch(). seconds_idle See crew_launcher_aws_batch(). seconds_wall See crew_launcher_aws_batch(). tasks_max See crew_launcher_aws_batch(). tasks_timers See crew_launcher_aws_batch(). reset_globals See crew_launcher_aws_batch(). reset_packages See crew_launcher_aws_batch(). reset_options See crew_launcher_aws_batch(). garbage_collection See crew_launcher_aws_batch(). launch_max See crew_launcher_aws_batch(). tls See crew_launcher_aws_batch(). processes See crew_launcher_aws_batch(). aws_batch_config See crew_launcher_aws_batch(). aws_batch_credentials See crew_launcher_aws_batch(). aws_batch_endpoint See crew_launcher_aws_batch(). aws_batch_region See crew_launcher_aws_batch(). aws_batch_job_definition See crew_launcher_aws_batch(). aws_batch_job_queue See crew_launcher_aws_batch(). aws_batch_share_identifier See crew_launcher_aws_batch(). aws_batch_scheduling_priority_override See crew_launcher_aws_batch(). aws_batch_parameters See crew_launcher_aws_batch(). aws_batch_container_overrides See crew_launcher_aws_batch(). aws_batch_node_overrides See crew_launcher_aws_batch(). aws_batch_retry_strategy See crew_launcher_aws_batch(). aws_batch_propagate_tags See crew_launcher_aws_batch(). aws_batch_timeout See crew_launcher_aws_batch(). aws_batch_tags See crew_launcher_aws_batch(). aws_batch_eks_properties_override See crew_launcher_aws_batch().","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"abstract launcher object.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"method-validate-","dir":"Reference","previous_headings":"","what":"Method validate()","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"Validate launcher.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"","code":"crew_class_launcher_aws_batch$validate()"},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"NULL (invisibly). Throws error field invalid.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"method-launch-worker-","dir":"Reference","previous_headings":"","what":"Method launch_worker()","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"Launch local process worker dial socket.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"","code":"crew_class_launcher_aws_batch$launch_worker(   call,   name,   launcher,   worker,   instance )"},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"call Character length 1, namespaced call crew::crew_worker() run worker accept tasks. name Character length 1, informative worker name. launcher Character length 1, name launcher. worker Positive integer length 1, index worker. worker index remains even current instance worker exits new instance launches. always 1 maximum number concurrent workers. instance Character length 1 uniquely identify current instance worker.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"call argument R code run initiate worker.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"handle object allow termination worker later .","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"method-terminate-worker-","dir":"Reference","previous_headings":"","what":"Method terminate_worker()","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"Terminate local process worker.","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"","code":"crew_class_launcher_aws_batch$terminate_worker(handle)"},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"handle process handle object previously returned launch_worker().","code":""},{"path":"/reference/crew_class_launcher_aws_batch.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch launcher class — crew_class_launcher_aws_batch","text":"NULL (invisibly).","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"AWS Batch monitor class — crew_class_monitor_aws_batch","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"AWS Batch monitor R6 class","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"See crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"order AWS Batch crew monitor class function properly, IAM policy needs permission perform SubmitJob, TerminateJob, ListJobs, DescribeJobs AWS Batch API calls. addition, download CloudWatch logs log() method, IAM policy also needs permission perform GetLogEvents CloudWatch logs API call. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":[]},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"job_queue See crew_monitor_aws_batch(). job_definition See crew_monitor_aws_batch(). log_group See crew_monitor_aws_batch(). config See crew_monitor_aws_batch(). credentials See crew_monitor_aws_batch(). endpoint See crew_monitor_aws_batch(). region See crew_monitor_aws_batch().","code":""},{"path":[]},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"crew_class_monitor_aws_batch$new() crew_class_monitor_aws_batch$validate() crew_class_monitor_aws_batch$terminate() crew_class_monitor_aws_batch$status() crew_class_monitor_aws_batch$log() crew_class_monitor_aws_batch$jobs() crew_class_monitor_aws_batch$active() crew_class_monitor_aws_batch$inactive() crew_class_monitor_aws_batch$submitted() crew_class_monitor_aws_batch$pending() crew_class_monitor_aws_batch$runnable() crew_class_monitor_aws_batch$starting() crew_class_monitor_aws_batch$running() crew_class_monitor_aws_batch$succeeded() crew_class_monitor_aws_batch$failed()","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"AWS Batch job definition constructor.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$new(   job_queue = NULL,   job_definition = NULL,   log_group = NULL,   config = NULL,   credentials = NULL,   endpoint = NULL,   region = NULL )"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"job_queue See crew_monitor_aws_batch(). job_definition See crew_monitor_aws_batch(). log_group See crew_monitor_aws_batch(). config See crew_monitor_aws_batch(). credentials See crew_monitor_aws_batch(). endpoint See crew_monitor_aws_batch(). region See crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"AWS Batch job definition object.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-validate-","dir":"Reference","previous_headings":"","what":"Method validate()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"Validate object.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$validate()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"NULL (invisibly). Throws error field invalid.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-terminate-","dir":"Reference","previous_headings":"","what":"Method terminate()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"Terminate one AWS Batch jobs.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$terminate(   ids,   reason = \"cancelled/terminated by crew.aws.batch monitor\",   verbose = TRUE )"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"ids Character vector IDs AWS Batch jobs terminate. reason Character length 1, natural language explaining reason job terminated. verbose Logical length 1, whether show progress bar R process interactive length(ids) greater 1.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"NULL (invisibly).","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-status-","dir":"Reference","previous_headings":"","what":"Method status()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"Get status single job","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$status(id)"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"id Character length 1, job ID. different user-supplied job name.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"one-row tibble information job.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-log-","dir":"Reference","previous_headings":"","what":"Method log()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"Get CloudWatch log job.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$log(id, start_from_head = FALSE)"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"id Character length 1, job ID. different user-supplied job name. start_from_head Logical length 1, whether print earlier log events later ones.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"method assumes job log driver \"awslogs\" (specifying AWS CloudWatch) log group one prespecified log_group argument crew_monitor_aws_batch(). method use log drivers Splunk, fail log group wrong missing.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble log information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-jobs-","dir":"Reference","previous_headings":"","what":"Method jobs()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs given job queue given job definition.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$jobs(   status = c(\"submitted\", \"pending\", \"runnable\", \"starting\", \"running\", \"succeeded\",     \"failed\") )"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"status Character vector job states. Results limited job states.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-active-","dir":"Reference","previous_headings":"","what":"Method active()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List active jobs: submitted, pending, runnable, starting, running (succeeded failed).","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$active()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-inactive-","dir":"Reference","previous_headings":"","what":"Method inactive()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List inactive jobs: ones whose status succeeded failed (submitted, pending, runnable, starting, running).","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$inactive()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-4","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-submitted-","dir":"Reference","previous_headings":"","what":"Method submitted()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"submitted\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$submitted()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-5","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-pending-","dir":"Reference","previous_headings":"","what":"Method pending()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"pending\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$pending()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-6","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-runnable-","dir":"Reference","previous_headings":"","what":"Method runnable()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"runnable\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$runnable()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-7","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-starting-","dir":"Reference","previous_headings":"","what":"Method starting()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"starting\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$starting()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-8","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-running-","dir":"Reference","previous_headings":"","what":"Method running()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"running\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$running()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-9","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-succeeded-","dir":"Reference","previous_headings":"","what":"Method succeeded()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"succeeded\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$succeeded()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-10","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"method-failed-","dir":"Reference","previous_headings":"","what":"Method failed()","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"List jobs whose status \"failed\".","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"","code":"crew_class_monitor_aws_batch$failed()"},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"details-11","dir":"Reference","previous_headings":"","what":"Details","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"output includes jobs job queue job definition supplied crew_monitor_aws_batch().","code":""},{"path":"/reference/crew_class_monitor_aws_batch.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"AWS Batch monitor class — crew_class_monitor_aws_batch","text":"tibble one row per job columns job information.","code":""},{"path":"/reference/crew_controller_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"Create R6 object submit tasks launch workers AWS Batch workers.","code":""},{"path":"/reference/crew_controller_aws_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"","code":"crew_controller_aws_batch(   name = NULL,   workers = 1L,   host = NULL,   port = NULL,   tls = crew::crew_tls(mode = \"automatic\"),   tls_enable = NULL,   tls_config = NULL,   seconds_interval = 0.5,   seconds_timeout = 60,   seconds_launch = 1800,   seconds_idle = Inf,   seconds_wall = Inf,   retry_tasks = TRUE,   tasks_max = Inf,   tasks_timers = 0L,   reset_globals = TRUE,   reset_packages = FALSE,   reset_options = FALSE,   garbage_collection = FALSE,   launch_max = 5L,   processes = NULL,   aws_batch_config = list(),   aws_batch_credentials = list(),   aws_batch_endpoint = NULL,   aws_batch_region = NULL,   aws_batch_job_definition,   aws_batch_job_queue,   aws_batch_share_identifier = NULL,   aws_batch_scheduling_priority_override = NULL,   aws_batch_parameters = NULL,   aws_batch_container_overrides = NULL,   aws_batch_node_overrides = NULL,   aws_batch_retry_strategy = NULL,   aws_batch_propagate_tags = NULL,   aws_batch_timeout = NULL,   aws_batch_tags = NULL,   aws_batch_eks_properties_override = NULL )"},{"path":"/reference/crew_controller_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"name Name client object. NULL, name automatically generated. workers Integer, maximum number parallel workers run. host IP address mirai client send receive tasks. NULL, host defaults local IP address. port TCP port listen workers. NULL, available ephemeral port automatically chosen. tls TLS configuration object crew_tls(). tls_enable Deprecated 2023-09-15 version 0.4.1. Use argument tls instead. tls_config Deprecated 2023-09-15 version 0.4.1. Use argument tls instead. seconds_interval Number seconds polling intervals waiting certain internal synchronous operations complete, checking mirai::status() seconds_timeout Number seconds timing waiting certain synchronous operations complete, checking mirai::status(). seconds_launch Seconds startup time allow. worker unconditionally assumed alive moment launch seconds_launch seconds later. seconds_launch seconds, worker considered alive actively connected assign websocket. seconds_idle Maximum number seconds worker can idle since completion last task. exceeded, worker exits. timer launch tasks_timers tasks completed. See idletime argument mirai::daemon(). crew excel perfectly transient workers micromanage assignment tasks workers, please allow enough idle time new worker delegated new task. seconds_wall Soft wall time seconds. timer launch tasks_timers tasks completed. See walltime argument mirai::daemon(). retry_tasks TRUE automatically retry task event unexpected worker exit. FALSE give first exit return mirai error code (code number 19). TRUE (default) recommended situations. Use FALSE debugging purposes, e.g. confirm task causing worker run memory crash way. tasks_max Maximum number tasks worker exiting. See maxtasks argument mirai::daemon(). crew excel perfectly transient workers micromanage assignment tasks workers, recommended set tasks_max value greater 1. tasks_timers Number tasks activating timers seconds_idle seconds_wall. See timerstart argument mirai::daemon(). reset_globals TRUE reset global environment variables tasks, FALSE leave alone. reset_packages TRUE unload packages loaded task (runs task), FALSE leave packages alone. reset_options TRUE reset global options original state task, FALSE otherwise. recommended set reset_options = TRUE reset_packages also TRUE packages sometimes rely options set loading time. garbage_collection TRUE run garbage collection tasks, FALSE skip. launch_max Positive integer length 1, maximum allowed consecutive launch attempts complete tasks. Enforced worker--worker basis. futile launch count resets back 0 worker completes task. recommended set launch_max 0 sometimes workers unproductive perfectly ordinary circumstances. launch_max still small enough detect errors underlying platform. processes NULL positive integer length 1, number local processes launch allow worker launches happen asynchronously. NULL, local processes launched. 1 greater, launcher starts processes start() ends terminate(). Plugins may use processes run asynchronous calls using launcher$async$eval() expect mirai task object return value. aws_batch_config Named list, config argument paws.compute::batch() optional configuration details. aws_batch_credentials Named list. credentials argument paws.compute::batch() optional credentials (already provided environment variables AWS_ACCESS_KEY_ID). aws_batch_endpoint Character length 1. endpoint argument paws.compute::batch() endpoint send HTTP requests. aws_batch_region Character length 1. region argument paws.compute::batch() AWS region string \"us-east-2\". aws_batch_job_definition Character length 1, name AWS Batch job definition use. default argument, job definition must created prior running controller. Please see https://docs.aws.amazon.com/batch/ details. create job definition, need create Docker-compatible image can run R crew. may inherit images https://github.com/rocker-org/rocker-versioned2. aws_batch_job_queue Character length 1, name AWS Batch job queue use. default argument, job queue must created prior running controller. Please see https://docs.aws.amazon.com/batch/ details. aws_batch_share_identifier NULL character length 1. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_scheduling_priority_override NULL integer length 1. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_parameters NULL nonempty list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_container_overrides NULL nonempty named list fields override container specified job definition. overrides command field ignored crew.aws.batch needs override command run crew worker. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_node_overrides NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_retry_strategy NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_propagate_tags NULL nonempty list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_timeout NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_tags NULL nonempty list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_eks_properties_override NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file.","code":""},{"path":"/reference/crew_controller_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"order AWS Batch crew plugin function properly, IAM policy needs permission perform SubmitJob TerminateJob AWS Batch API calls. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":"/reference/crew_controller_aws_batch.html","id":"aws-arguments","dir":"Reference","previous_headings":"","what":"AWS arguments","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"AWS Batch controller launcher accept many arguments start \"aws_batch_\". arguments AWS-Batch-specific parameters forwarded directly submit_job() method Batch client paws.compute R package full description argument, including meaning format, please visit https://www.paws-r-sdk.com/docs/batch_submit_job/. upstream API documentation https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html analogous CLI documentation https://docs.aws.amazon.com/cli/latest/reference/batch/submit-job.html. actual argument names may vary slightly, depending : example, aws_batch_job_definition argument crew AWS Batch launcher/controller corresponds jobDefinition argument web API paws.compute::batch()$submit_job(), correspond --job-definition argument CLI.","code":""},{"path":"/reference/crew_controller_aws_batch.html","id":"verbosity","dir":"Reference","previous_headings":"","what":"Verbosity","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"Control verbosity paws.log_level global option R. Set 0 minimum verbosity 3 maximum verbosity.","code":""},{"path":[]},{"path":"/reference/crew_controller_aws_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a controller with an AWS Batch launcher. — crew_controller_aws_batch","text":"","code":"if (identical(Sys.getenv(\"CREW_EXAMPLES\"), \"true\")) { controller <- crew_controller_aws_batch(   aws_batch_job_definition = \"YOUR_JOB_DEFINITION_NAME\",   aws_batch_job_queue = \"YOUR_JOB_QUEUE_NAME\" ) controller$start() controller$push(name = \"task\", command = sqrt(4)) controller$wait() controller$pop()$result controller$terminate() }"},{"path":"/reference/crew_definition_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AWS Batch job definition object. — crew_definition_aws_batch","title":"Create an AWS Batch job definition object. — crew_definition_aws_batch","text":"Create R6 object manage job definition AWS Batch jobs.","code":""},{"path":"/reference/crew_definition_aws_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AWS Batch job definition object. — crew_definition_aws_batch","text":"","code":"crew_definition_aws_batch(   job_queue,   job_definition = paste0(\"crew-aws-batch-job-definition-\", crew::crew_random_name()),   log_group = \"/aws/batch/job\",   config = NULL,   credentials = NULL,   endpoint = NULL,   region = NULL )"},{"path":"/reference/crew_definition_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AWS Batch job definition object. — crew_definition_aws_batch","text":"job_queue Character length 1, name AWS Batch job queue. job_definition Character length 1, name AWS Batch job definition. job definition might might exist time crew_definition_aws_batch() called. Either way fine. log_group Character length 1, AWS Batch CloudWatch log group get job logs. default log group often \"/aws/batch/job\", always. easy get log group active job job definition, non-default log group know name, please consult system administrator. config Optional named list, config argument paws.compute::batch() optional configuration details. credentials Optional named list. credentials argument paws.compute::batch() optional credentials (already provided environment variables AWS_ACCESS_KEY_ID). endpoint Optional character length 1. endpoint argument paws.compute::batch() endpoint send HTTP requests. region Character length 1. region argument paws.compute::batch() AWS region string \"us-east-2\". Serves region AWS Batch CloudWatch. Tries default paws.common::get_config()$region, Sys.getenv(\"AWS_REGION\") unsuccessful, Sys.getenv(\"AWS_REGION\"), Sys.getenv(\"AWS_DEFAULT_REGION\").","code":""},{"path":"/reference/crew_definition_aws_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an AWS Batch job definition object. — crew_definition_aws_batch","text":"R6 job definition object.","code":""},{"path":"/reference/crew_definition_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"Create an AWS Batch job definition object. — crew_definition_aws_batch","text":"order AWS Batch crew job definition class function properly, IAM policy needs permission perform RegisterJobDefinition, DeregisterJobDefinition, DescribeJobDefinitions AWS Batch API calls. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":[]},{"path":"/reference/crew_launcher_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"Create R6 AWS Batch launcher object.","code":""},{"path":"/reference/crew_launcher_aws_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"","code":"crew_launcher_aws_batch(   name = NULL,   seconds_interval = 0.5,   seconds_timeout = 60,   seconds_launch = 1800,   seconds_idle = Inf,   seconds_wall = Inf,   tasks_max = Inf,   tasks_timers = 0L,   reset_globals = TRUE,   reset_packages = FALSE,   reset_options = FALSE,   garbage_collection = FALSE,   launch_max = 5L,   tls = crew::crew_tls(mode = \"automatic\"),   processes = NULL,   aws_batch_config = list(),   aws_batch_credentials = list(),   aws_batch_endpoint = NULL,   aws_batch_region = NULL,   aws_batch_job_definition,   aws_batch_job_queue,   aws_batch_share_identifier = NULL,   aws_batch_scheduling_priority_override = NULL,   aws_batch_parameters = NULL,   aws_batch_container_overrides = NULL,   aws_batch_node_overrides = NULL,   aws_batch_retry_strategy = NULL,   aws_batch_propagate_tags = NULL,   aws_batch_timeout = NULL,   aws_batch_tags = NULL,   aws_batch_eks_properties_override = NULL )"},{"path":"/reference/crew_launcher_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"name Name launcher. seconds_interval Number seconds polling intervals waiting certain internal synchronous operations complete, checking mirai::status(). seconds_timeout Number seconds timing waiting certain synchronous operations complete, checking mirai::status(). seconds_launch Seconds startup time allow. worker unconditionally assumed alive moment launch seconds_launch seconds later. seconds_launch seconds, worker considered alive actively connected assign websocket. seconds_idle Maximum number seconds worker can idle since completion last task. exceeded, worker exits. timer launch tasks_timers tasks completed. See idletime argument mirai::daemon(). crew excel perfectly transient workers micromanage assignment tasks workers, please allow enough idle time new worker delegated new task. seconds_wall Soft wall time seconds. timer launch tasks_timers tasks completed. See walltime argument mirai::daemon(). tasks_max Maximum number tasks worker exiting. See maxtasks argument mirai::daemon(). crew excel perfectly transient workers micromanage assignment tasks workers, recommended set tasks_max value greater 1. tasks_timers Number tasks activating timers seconds_idle seconds_wall. See timerstart argument mirai::daemon(). reset_globals TRUE reset global environment variables tasks, FALSE leave alone. reset_packages TRUE unload packages loaded task (runs task), FALSE leave packages alone. reset_options TRUE reset global options original state task, FALSE otherwise. recommended set reset_options = TRUE reset_packages also TRUE packages sometimes rely options set loading time. garbage_collection TRUE run garbage collection tasks, FALSE skip. launch_max Positive integer length 1, maximum allowed consecutive launch attempts complete tasks. Enforced worker--worker basis. futile launch count resets back 0 worker completes task. recommended set launch_max 0 sometimes workers unproductive perfectly ordinary circumstances. launch_max still small enough detect errors underlying platform. tls TLS configuration object crew_tls(). processes NULL positive integer length 1, number local processes launch allow worker launches happen asynchronously. NULL, local processes launched. 1 greater, launcher starts processes start() ends terminate(). Plugins may use processes run asynchronous calls using launcher$async$eval() expect mirai task object return value. aws_batch_config Named list, config argument paws.compute::batch() optional configuration details. aws_batch_credentials Named list. credentials argument paws.compute::batch() optional credentials (already provided environment variables AWS_ACCESS_KEY_ID). aws_batch_endpoint Character length 1. endpoint argument paws.compute::batch() endpoint send HTTP requests. aws_batch_region Character length 1. region argument paws.compute::batch() AWS region string \"us-east-2\". aws_batch_job_definition Character length 1, name AWS Batch job definition use. default argument, job definition must created prior running controller. Please see https://docs.aws.amazon.com/batch/ details. create job definition, need create Docker-compatible image can run R crew. may inherit images https://github.com/rocker-org/rocker-versioned2. aws_batch_job_queue Character length 1, name AWS Batch job queue use. default argument, job queue must created prior running controller. Please see https://docs.aws.amazon.com/batch/ details. aws_batch_share_identifier NULL character length 1. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_scheduling_priority_override NULL integer length 1. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_parameters NULL nonempty list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_container_overrides NULL nonempty named list fields override container specified job definition. overrides command field ignored crew.aws.batch needs override command run crew worker. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_node_overrides NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_retry_strategy NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_propagate_tags NULL nonempty list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_timeout NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_tags NULL nonempty list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file. aws_batch_eks_properties_override NULL nonempty named list. details, visit https://www.paws-r-sdk.com/docs/batch_submit_job/ \"AWS arguments\" sections help file.","code":""},{"path":"/reference/crew_launcher_aws_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"R6 AWS Batch launcher object.","code":""},{"path":"/reference/crew_launcher_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"order AWS Batch crew plugin function properly, IAM policy needs permission perform SubmitJob TerminateJob AWS Batch API calls. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":"/reference/crew_launcher_aws_batch.html","id":"aws-arguments","dir":"Reference","previous_headings":"","what":"AWS arguments","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"AWS Batch controller launcher accept many arguments start \"aws_batch_\". arguments AWS-Batch-specific parameters forwarded directly submit_job() method Batch client paws.compute R package full description argument, including meaning format, please visit https://www.paws-r-sdk.com/docs/batch_submit_job/. upstream API documentation https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html analogous CLI documentation https://docs.aws.amazon.com/cli/latest/reference/batch/submit-job.html. actual argument names may vary slightly, depending : example, aws_batch_job_definition argument crew AWS Batch launcher/controller corresponds jobDefinition argument web API paws.compute::batch()$submit_job(), correspond --job-definition argument CLI.","code":""},{"path":"/reference/crew_launcher_aws_batch.html","id":"verbosity","dir":"Reference","previous_headings":"","what":"Verbosity","title":"Create an AWS Batch launcher object. — crew_launcher_aws_batch","text":"Control verbosity paws.log_level global option R. Set 0 minimum verbosity 3 maximum verbosity.","code":""},{"path":[]},{"path":"/reference/crew_launcher_aws_batch_launch.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit an AWS Batch job. — crew_launcher_aws_batch_launch","title":"Submit an AWS Batch job. — crew_launcher_aws_batch_launch","text":"user-side function. internal use .","code":""},{"path":"/reference/crew_launcher_aws_batch_launch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit an AWS Batch job. — crew_launcher_aws_batch_launch","text":"","code":"crew_launcher_aws_batch_launch(args_client, args_submit)"},{"path":"/reference/crew_launcher_aws_batch_launch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit an AWS Batch job. — crew_launcher_aws_batch_launch","text":"args_client Named list arguments paws.compute::batch(). args_submit Named list arguments paws.compute::batch()$submit_job().","code":""},{"path":"/reference/crew_launcher_aws_batch_launch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit an AWS Batch job. — crew_launcher_aws_batch_launch","text":"HTTP response submitting job.","code":""},{"path":"/reference/crew_launcher_aws_batch_launch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Submit an AWS Batch job. — crew_launcher_aws_batch_launch","text":"utility separate exported function specific launcher shared job definition monitor classes. generates paws.compute::batch() client within instead method inside class. needs run separate local worker process needs accept exportable arguments.","code":""},{"path":"/reference/crew_launcher_aws_batch_terminate.html","id":null,"dir":"Reference","previous_headings":"","what":"Terminate an AWS Batch job. — crew_launcher_aws_batch_terminate","title":"Terminate an AWS Batch job. — crew_launcher_aws_batch_terminate","text":"user-side function. internal use .","code":""},{"path":"/reference/crew_launcher_aws_batch_terminate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminate an AWS Batch job. — crew_launcher_aws_batch_terminate","text":"","code":"crew_launcher_aws_batch_terminate(args_client, job_id)"},{"path":"/reference/crew_launcher_aws_batch_terminate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminate an AWS Batch job. — crew_launcher_aws_batch_terminate","text":"args_client Named list arguments paws.compute::batch(). job_id Character length 1, ID AWS Batch job terminate.","code":""},{"path":"/reference/crew_launcher_aws_batch_terminate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Terminate an AWS Batch job. — crew_launcher_aws_batch_terminate","text":"HTTP response submitting job.","code":""},{"path":"/reference/crew_launcher_aws_batch_terminate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Terminate an AWS Batch job. — crew_launcher_aws_batch_terminate","text":"utility separate exported function specific launcher shared job definition monitor classes. generates paws.compute::batch() client within instead method inside class. needs run separate local worker process needs accept exportable arguments.","code":""},{"path":"/reference/crew_monitor_aws_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an AWS Batch monitor object. — crew_monitor_aws_batch","title":"Create an AWS Batch monitor object. — crew_monitor_aws_batch","text":"Create R6 object list, inspect, terminate AWS Batch jobs.","code":""},{"path":"/reference/crew_monitor_aws_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an AWS Batch monitor object. — crew_monitor_aws_batch","text":"","code":"crew_monitor_aws_batch(   job_queue,   job_definition,   log_group = \"/aws/batch/job\",   config = NULL,   credentials = NULL,   endpoint = NULL,   region = NULL )"},{"path":"/reference/crew_monitor_aws_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an AWS Batch monitor object. — crew_monitor_aws_batch","text":"job_queue Character length 1, name AWS Batch job queue. job_definition Character length 1, name AWS Batch job definition. log_group Character length 1, AWS Batch CloudWatch log group get job logs. default log group often \"/aws/batch/job\", always. easy get log group active job job definition, non-default log group know name, please consult system administrator. config Optional named list, config argument paws.compute::batch() optional configuration details. credentials Optional named list. credentials argument paws.compute::batch() optional credentials (already provided environment variables AWS_ACCESS_KEY_ID). endpoint Optional character length 1. endpoint argument paws.compute::batch() endpoint send HTTP requests. region Character length 1. region argument paws.compute::batch() AWS region string \"us-east-2\". Serves region AWS Batch CloudWatch. Tries default paws.common::get_config()$region, Sys.getenv(\"AWS_REGION\") unsuccessful, Sys.getenv(\"AWS_REGION\"), Sys.getenv(\"AWS_DEFAULT_REGION\").","code":""},{"path":"/reference/crew_monitor_aws_batch.html","id":"iam-policies","dir":"Reference","previous_headings":"","what":"IAM policies","title":"Create an AWS Batch monitor object. — crew_monitor_aws_batch","text":"order AWS Batch crew monitor class function properly, IAM policy needs permission perform SubmitJob, TerminateJob, ListJobs, DescribeJobs AWS Batch API calls. addition, download CloudWatch logs log() method, IAM policy also needs permission perform GetLogEvents CloudWatch logs API call. information AWS policies permissions, please visit https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html.","code":""},{"path":[]},{"path":"/news/index.html","id":"crewawsbatch-0069002-development","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.6.9002 (development)","title":"crew.aws.batch 0.0.6.9002 (development)","text":"Send cancellation termination requests end jobs. Fix launcher bug/typo parameters supplied container overrides.","code":""},{"path":"/news/index.html","id":"crewawsbatch-006","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.6","title":"crew.aws.batch 0.0.6","text":"CRAN release: 2024-07-10 Add retry_tasks argument.","code":""},{"path":"/news/index.html","id":"crewawsbatch-005","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.5","title":"crew.aws.batch 0.0.5","text":"CRAN release: 2024-02-08 Require crew >= 0.8.0. Describe IAM policy requirements documentation.","code":""},{"path":"/news/index.html","id":"crewawsbatch-004","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.4","title":"crew.aws.batch 0.0.4","text":"CRAN release: 2024-01-10 Move args_client() args_submit() launcher methods private list. Refactor testing infrastructure. Handle missing scheduling priorities definition$describe() error field missing.","code":""},{"path":"/news/index.html","id":"crewawsbatch-003","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.3","title":"crew.aws.batch 0.0.3","text":"Move job definition management methods class. (See crew_definition_aws_batch().)","code":""},{"path":"/news/index.html","id":"crewawsbatch-002","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.2","title":"crew.aws.batch 0.0.2","text":"Use paws.common::paginate() get full log job (#5). Requires paws.common >= 0.7.0 due https://github.com/paws-r/paws/issues/721. Rename crew_aws_batch_monitor() crew_monitor_aws_batch() syntactic consistency. Allow terminate() method monitor terminate multiple job IDs. Also add cli progress bar.","code":""},{"path":"/news/index.html","id":"crewawsbatch-001","dir":"Changelog","previous_headings":"","what":"crew.aws.batch 0.0.1","title":"crew.aws.batch 0.0.1","text":"CRAN release: 2023-12-13 First version.","code":""}]
